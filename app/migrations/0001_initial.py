# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-11-17 19:57
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('department', models.CharField(max_length=500)),
                ('institution', models.CharField(max_length=500)),
                ('address1', models.CharField(max_length=500)),
                ('address2', models.CharField(max_length=500)),
                ('city', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254)),
                ('orcid', models.CharField(max_length=40)),
                ('affiliation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Affiliations')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('iso', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Experiments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('finalized', models.BooleanField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiment_creator', to='app.Contacts')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=1000)),
                ('required', models.BooleanField()),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentParameterSets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested', models.DurationField()),
                ('granted', models.DurationField()),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Instruments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('public', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('time_to_schedule', models.DurationField()),
                ('admins', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_admins', to='app.Contacts')),
                ('local_contacts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
                ('parameter_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InstrumentParameterSets')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField()),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Instruments')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ParameterValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InstrumentParameters')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InstrumentRequest')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Proposals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=500)),
                ('abstract', models.TextField(max_length=5000)),
                ('scientific_bg', models.FileField(upload_to='upload/pdf/proposals/')),
                ('remarks', models.TextField(max_length=5000)),
                ('continuation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_continuation', to='app.Proposals')),
                ('coproposers', models.ManyToManyField(related_name='proposal_coporposals', to='app.Contacts')),
                ('local_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_local_contact', to='app.Contacts')),
                ('proposer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('link', models.CharField(max_length=255)),
                ('year', models.PositiveSmallIntegerField(db_index=True)),
                ('authors', models.ManyToManyField(to='app.Contacts')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='SamplePhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('url', models.ImageField(upload_to='upload/images/samples/')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='SampleRemarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.TextField(max_length=1000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('formula', models.CharField(max_length=255)),
                ('mass', models.DecimalField(decimal_places=3, max_digits=10)),
                ('volume', models.DecimalField(decimal_places=3, max_digits=10)),
                ('description', models.TextField(max_length=1000)),
                ('type', models.CharField(choices=[('S', 'Single crystal'), ('M', 'Polycrystal'), ('P', 'Powder'), ('L', 'Liquid'), ('A', 'Amorphous')], max_length=1)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='SharedOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField()),
                ('instruments', models.ManyToManyField(to='app.Instruments')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Slots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('type', models.CharField(choices=[('M', 'Maintenance'), ('O', 'Instrument off'), ('F', 'Failure'), ('R', 'Repair')], max_length=1)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Instruments')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='sampleremarks',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Samples'),
        ),
        migrations.AddField(
            model_name='samplephotos',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Samples'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='publications',
            field=models.ManyToManyField(to='app.Publications'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='resubmission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Proposals'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='samples',
            field=models.ManyToManyField(to='app.Samples'),
        ),
        migrations.AddField(
            model_name='instrumentrequest',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Instruments'),
        ),
        migrations.AddField(
            model_name='instrumentrequest',
            name='option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Options'),
        ),
        migrations.AddField(
            model_name='instrumentrequest',
            name='propsal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Proposals'),
        ),
        migrations.AddField(
            model_name='instrumentrequest',
            name='shared_options',
            field=models.ManyToManyField(to='app.SharedOptions'),
        ),
        migrations.AddField(
            model_name='instrumentparameters',
            name='set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InstrumentParameterSets'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Instruments'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='local_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts'),
        ),
        migrations.AddField(
            model_name='experiments',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InstrumentRequest'),
        ),
        migrations.AddField(
            model_name='affiliations',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Countries'),
        ),
    ]
